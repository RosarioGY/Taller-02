/*
 * Loan Validation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LoanValidationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-10T18:08:51.864200200-05:00[America/Lima]", comments = "Generator version: 7.7.0")
public class LoanValidationRequest {
  public static final String SERIALIZED_NAME_MONTHLY_SALARY = "monthlySalary";
  @SerializedName(SERIALIZED_NAME_MONTHLY_SALARY)
  private Double monthlySalary;

  public static final String SERIALIZED_NAME_REQUESTED_AMOUNT = "requestedAmount";
  @SerializedName(SERIALIZED_NAME_REQUESTED_AMOUNT)
  private Double requestedAmount;

  public static final String SERIALIZED_NAME_TERM_MONTHS = "termMonths";
  @SerializedName(SERIALIZED_NAME_TERM_MONTHS)
  private Integer termMonths;

  public static final String SERIALIZED_NAME_LAST_LOAN_DATE = "lastLoanDate";
  @SerializedName(SERIALIZED_NAME_LAST_LOAN_DATE)
  private LocalDate lastLoanDate;

  public LoanValidationRequest() {
  }

  public LoanValidationRequest monthlySalary(Double monthlySalary) {
    this.monthlySalary = monthlySalary;
    return this;
  }

  /**
   * Get monthlySalary
   * minimum: 0.01
   * @return monthlySalary
   */
  @javax.annotation.Nonnull
  public Double getMonthlySalary() {
    return monthlySalary;
  }

  public void setMonthlySalary(Double monthlySalary) {
    this.monthlySalary = monthlySalary;
  }


  public LoanValidationRequest requestedAmount(Double requestedAmount) {
    this.requestedAmount = requestedAmount;
    return this;
  }

  /**
   * Get requestedAmount
   * minimum: 0.01
   * @return requestedAmount
   */
  @javax.annotation.Nonnull
  public Double getRequestedAmount() {
    return requestedAmount;
  }

  public void setRequestedAmount(Double requestedAmount) {
    this.requestedAmount = requestedAmount;
  }


  public LoanValidationRequest termMonths(Integer termMonths) {
    this.termMonths = termMonths;
    return this;
  }

  /**
   * Get termMonths
   * minimum: 1
   * maximum: 36
   * @return termMonths
   */
  @javax.annotation.Nonnull
  public Integer getTermMonths() {
    return termMonths;
  }

  public void setTermMonths(Integer termMonths) {
    this.termMonths = termMonths;
  }


  public LoanValidationRequest lastLoanDate(LocalDate lastLoanDate) {
    this.lastLoanDate = lastLoanDate;
    return this;
  }

  /**
   * Fecha del último préstamo del solicitante.
   * @return lastLoanDate
   */
  @javax.annotation.Nullable
  public LocalDate getLastLoanDate() {
    return lastLoanDate;
  }

  public void setLastLoanDate(LocalDate lastLoanDate) {
    this.lastLoanDate = lastLoanDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanValidationRequest loanValidationRequest = (LoanValidationRequest) o;
    return Objects.equals(this.monthlySalary, loanValidationRequest.monthlySalary) &&
        Objects.equals(this.requestedAmount, loanValidationRequest.requestedAmount) &&
        Objects.equals(this.termMonths, loanValidationRequest.termMonths) &&
        Objects.equals(this.lastLoanDate, loanValidationRequest.lastLoanDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(monthlySalary, requestedAmount, termMonths, lastLoanDate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanValidationRequest {\n");
    sb.append("    monthlySalary: ").append(toIndentedString(monthlySalary)).append("\n");
    sb.append("    requestedAmount: ").append(toIndentedString(requestedAmount)).append("\n");
    sb.append("    termMonths: ").append(toIndentedString(termMonths)).append("\n");
    sb.append("    lastLoanDate: ").append(toIndentedString(lastLoanDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("monthlySalary");
    openapiFields.add("requestedAmount");
    openapiFields.add("termMonths");
    openapiFields.add("lastLoanDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("monthlySalary");
    openapiRequiredFields.add("requestedAmount");
    openapiRequiredFields.add("termMonths");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LoanValidationRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LoanValidationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LoanValidationRequest is not found in the empty JSON string", LoanValidationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LoanValidationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LoanValidationRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : LoanValidationRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoanValidationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoanValidationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoanValidationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoanValidationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<LoanValidationRequest>() {
           @Override
           public void write(JsonWriter out, LoanValidationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoanValidationRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LoanValidationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoanValidationRequest
   * @throws IOException if the JSON string is invalid with respect to LoanValidationRequest
   */
  public static LoanValidationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoanValidationRequest.class);
  }

  /**
   * Convert an instance of LoanValidationRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

